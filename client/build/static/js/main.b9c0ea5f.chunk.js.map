{"version":3,"sources":["utils/queries.js","components/GameList.js","components/ParlayList.js","utils/mutations.js","utils/auth.js","components/ParlayForm.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/OutcomeList.js","components/OutcomeForm.js","pages/SingleParlay.js","pages/Dashboard.js","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_PARLAYS","gql","QUERY_GAMES","QUERY_SINGLE_PARLAY","QUERY_ME","GameList","useQuery","loading","data","games","length","console","log","className","id","map","game","src","alt","away_team","away_price","away_point","event_date","home_team","home_price","home_point","_id","ParlayList","parlays","title","showTitle","showUsername","parlay","to","username","style","fontSize","createdAt","parlay_name","LOGIN_USER","ADD_USER","ADD_PARLAY","ADD_OUTCOME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","ParlayForm","useState","setParlayName","characterCount","setCharacterCount","useMutation","update","cache","addParlay","readQuery","query","writeQuery","e","error","me","handleFormSubmit","event","preventDefault","variables","Auth","getProfile","loggedIn","onSubmit","name","placeholder","value","lineHeight","resize","onChange","target","type","message","date","toString","split","splice","join","document","write","Home","setData","isLoading","setLoading","useEffect","fetch","then","res","json","border","Signup","email","password","formState","setFormState","addUser","handleChange","login","Login","props","cursor","OutcomeList","outcomes","borderBottom","outcome","commence_time","team_choice","odds","spread","OutcomeForm","parlayId","setTeamChoice","setOdds","setSpread","valueCount","setValueCount","addOutcome","checkbox","check","for","SingleParlay","useParams","fontStyle","Dashboard","Navbar","Aos","init","duration","addEventListener","onClick","logout","Footer","year","getFullYear","useLocation","navigate","useNavigate","pathname","href","rel","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","InMemoryCache","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ApolloProvider","client","getElementById"],"mappings":"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","file":"static/js/main.b9c0ea5f.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      parlays {\n        _id\n        parlay_name\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_PARLAYS = gql`\n  query getParlays {\n    parlays {\n      _id\n      parlay_name\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_GAMES = gql`\n  query getGames {\n    games {\n      _id\n      home_team\n      home_price\n      home_point\n      away_team\n      away_price\n      away_point\n      commence_time\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_PARLAY = gql`\n  query getSingleParlay($parlayId: ID!) {\n    parlay(parlayId: $parlayId) {\n      _id\n      parlay_name\n      createdAt\n      outcomes {\n        _id\n        team_choice\n        odds\n        spread\n        commence_time\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      parlays {\n        _id\n        parlay_name\n        createdAt\n      }\n    }\n  }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_GAMES } from '../utils/queries';\n\n\nconst GameList = () => {\n  const { loading, data } = useQuery(QUERY_GAMES);\n  const games = data?.games || [];\n  if (!games.length) {\n    return <h3>Where is the action❗❓</h3>;\n  }\nconsole.log(games);\n\n  return (\n      <div>\n      {loading ? ( \n        <div>Loading...💸...</div> \n      ) : (\n//************************* GAME-INFO: TEAMS & ODDS ******************//\n         <div className=\"flex-row my-4\" id=\"gaming\">\n          {games && games.map((game) => (\n            <div key={game._id} className=\"card mb-3\" id=\"game-card\">\n               <div className=\"p-3 text-light\" id=\"game-card\">\n                <div id=\"game-cardss\" data=\"slide-left\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/away_m9lnn0.png\" alt=\"Away\"></img></p>\n                  <p className=\"card-body\">Away: {game.away_team}</p>\n                  <h5>Away - ODDS: FanDuel 🎲</h5>\n                  <p className=\"card-body\">Money-Line: ({game.away_price})</p>\n                  <p className=\"card-body\">$pread: ({game.away_point})</p>\n                </div>\n                  <p id=\"vs\"><img src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008346/vs1_mwfonr.png\" alt=\"VS\"></img></p>\n                  <p id=\"vs\">{game.event_date}</p>\n                <div id=\"game-cards\" data=\"slide-right\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/home_qpmug9.png\" alt=\"Home\"></img></p>\n                  <p className=\"card-body\">Home: {game.home_team}</p>\n                  <h5>Home - ODDS: FanDuel 🎲</h5>\n                  <p className=\"card-body\">Money-Line: ({game.home_price})</p> \n                  <p className=\"card-body\">$pread: ({game.home_point})</p> \n                </div>\n              </div>\n              </div>\n          ))}\n          </div>\n      )}\n      </div>\n  );\n          };\nexport default GameList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ParlayList = ({\n  parlays,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  if (!parlays.length) {\n    return <h3>No Parlays Created...Yet❗🚫</h3>;\n  }\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {parlays &&\n        parlays.map((parlay) => (\n          <div key={parlay._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/profiles/${parlay.username}`}\n                >\n                  {parlay.username} <br />\n                  <span style={{ fontSize: '1rem' }}>\n                    will cash in @: {parlay.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                  You will cash in on this party after: {parlay.createdAt}\n                  </span>\n                </>\n              )}\n            </h4>\n            <div className=\"card-body bg-light p-2\" data=\"zoom-in\">\n              <p>{parlay.parlay_name}</p>\n            </div>\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/parlays/${parlay._id}`}\n            >\n              Pick The Next Winner...💰...Winner...💰...Chicken...🐔...Dinner!\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ParlayList;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_PARLAY = gql`\n  mutation addParlay($parlay_name: String!) {\n    addParlay(parlay_name: $parlay_name) {\n      _id\n      parlay_name\n      createdAt\n      outcomes {\n        _id\n      team_choice\n      odds\n      spread\n      commence_time\n      }\n    }\n  }\n`;\n\nexport const ADD_OUTCOME = gql`\n  mutation addOutcome($parlayId: ID!, $team_choice: String!, $odds: Int!, $spread: Int!) {\n    addOutcome(parlayId: $parlayId, team_choice: $team_choice, odds: $odds, spread: $spread) {\n      _id\n      parlay_name\n      createdAt\n      outcomes {\n        _id\n        team_choice\n        odds\n        spread\n        commence_time\n      }\n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_PARLAY } from '../utils/mutations';\nimport { QUERY_PARLAYS, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst ParlayForm = () => {\n  const [parlay_name, setParlayName] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addParlay, { error }] = useMutation(ADD_PARLAY, {\n    update(cache, { data: { addParlay } }) {\n      try {\n        const { parlays } = cache.readQuery({ query: QUERY_PARLAYS });\n\n        cache.writeQuery({\n          query: QUERY_PARLAYS,\n          data: { parlays: [addParlay, ...parlays] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, parlays: [...me.parlays, addParlay] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addParlay({\n        variables: {\n          parlay_name,\n          username: Auth.getProfile().data.username,\n        },\n      });\n\n      setParlayName('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'parlay_name' && value.length <= 280) {\n      setParlayName(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>💰...Create Your Next...💸...Winning Parlay Ticket...🎫</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form data=\"slide-right\"\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"parlay_name\"\n                placeholder=\"💰...Winner...Winner...Chicken...🐔...Dinner...💰\"\n                value={parlay_name}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Create Ticket 📬\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          ⛔ You need to be logged in to create a ticket❗ Please❗{' '}\n          <Link to=\"/login\">Login 📡</Link> or <Link to=\"/signup\">Sign Up 🔏</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ParlayForm;","import React, { useState, useEffect } from 'react';\nimport GameList from '../components/GameList';\nimport ParlayList from '../components/ParlayList';\nimport ParlayForm from '../components/ParlayForm';\n\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Home = () => {\n  const [parlays, setData] = useState([])\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(QUERY_PARLAYS)\n      .then((res) => res.json())\n      .then((parlays) => {\n        setData(parlays)\n        setLoading(false)\n      })\n  }, [])\n\n  if (isLoading) return <p>💸...Which Picks Look Like A Lock 🔒❔...💸</p>\n  if (!parlays) return <p>Error❗⛔...No Parlays Available...❗⛔</p>\n\n  return (\n    <main>\n      {parlays.map(parlay => (\n      <div className=\"flex-row justify-center\" key={parlay._id}>\n        <div className=\"flex-row justify-center\" data=\"zoom-in\">\n          <h5 id=\"list-title\">Scheduled 🏈 Games: {date} 📋</h5>\n        <GameList />\n        </div>\n        <div data=\"slide-right\"\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px solid black' }}\n        >\n          <ParlayForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\" data=\"slide-left\">\n          {isLoading ? (\n            <div>💸...Which Picks Look Like A Lock 🔒❔...💸</div>\n          ) : (\n            <ParlayList\n              parlays={parlays}\n              title=\"Pick The Next Winner...💰...Winner...💰...Chicken...🐔...Dinner!\"\n            />\n          )}\n        </div>\n      </div>\n      ))}\n    </main>\n  )\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div className=\"col\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up 🎰</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <button className='btn' id=\"btn1\">\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </button>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button id=\"btn1\"\n                  className=\"btn\"\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\" id=\"log\">\n          <h4 id=\"login\" className=\"card-header\">Login 📡</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div id=\"alert\" className=\"my-3 p-3 text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst OutcomeList = ({ outcomes = [] }) => {\n  if (!outcomes.length) {\n    return <h3>Sorry❗⛔...Parlay Picks 📋 Are Temporarily 🚫 Unavailable❗⛔</h3>;\n  }\n\n  return (\n    <>\n      <h3\n        className=\"p-5 display-inline-block\"\n        style={{ borderBottom: '1px solid black' }}\n      >\n        Parlay 🎲 Selections 🎫:\n      </h3>\n      <div className=\"flex-row my-4\">\n        {outcomes &&\n          outcomes.map((outcome) => (\n            <div key={outcome._id} className=\"col-12 mb-3 pb-3\" data=\"slide-left\">\n              <div className=\"p-3 bg-dark text-light\">\n                <h5 className=\"card-header\">\n                  {outcome.username} holds the following parlay tickets{' '}\n                  <span style={{ fontSize: '0.825rem' }}>\n                    on {outcome.commence_time}\n                  </span>\n                </h5>\n                <p className=\"card-body\">{outcome.team_choice}</p>\n                <p className=\"card-body\">{outcome.odds}</p>\n                <p className=\"card-body\">{outcome.spread}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default OutcomeList;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_OUTCOME } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport { check } from 'prettier';\n\nconst OutcomeForm = ({ parlayId }) => {\n\n  const [team_choice, setTeamChoice] = useState(false);\n  const [odds, setOdds] = useState(false);\n  const [spread, setSpread] = useState(false);\n  const [valueCount, setValueCount] = useState(false);\n\n  const [addOutcome, { error }] = useMutation(ADD_OUTCOME);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addOutcome({\n        variables: {\n          parlayId,\n          team_choice,\n          odds,\n          spread,\n          username: Auth.getProfile().data.username,\n        },\n      });\n\n      setTeamChoice(false);\n      setOdds(false);\n      setSpread(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { checkbox, value } = event.target;\n\n    if (checkbox === check && value <= true) {\n      setTeamChoice(value);\n      setOdds(value);\n      setSpread(value);\n      setValueCount(true);\n    }\n  };\n\n  return (\n    <div>\n      <h4>💸...Which Picks Look Like A Lock 🔒❔...💸</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              valueCount === true || error ? 'text-danger' : ''\n            }`}\n          >\n            Parlay Selections Confirmed ✅: {valueCount}\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\" data=\"slide-right\">\n              <input\n                checkbox={check}\n                value={team_choice}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></input>\n              <label for={team_choice}>{team_choice}</label>\n            </div>\n            <div className=\"col-12 col-lg-9\" data=\"slide-left\">\n              <input\n                checkbox={check}\n                value={odds}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></input>\n               <label for={odds}>{odds}</label>\n            </div>\n            <div className=\"col-12 col-lg-9\" data=\"slide-right\">\n              <input\n                checkbox={check}\n                value={spread}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></input>\n               <label for={spread}>{spread}</label>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Selections 💸\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n           ⛔ You need to be logged in to make picks❗ Please❗{' '}\n          <Link to=\"/login\">Login 📡</Link> or <Link to=\"/signup\">Sign Up 🔏</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default OutcomeForm;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport OutcomeList from '../components/OutcomeList';\nimport OutcomeForm from '../components/OutcomeForm';\n\nimport { QUERY_SINGLE_PARLAY } from '../utils/queries';\n\nconst SingleParlay = () => {\n  const { parlayId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_PARLAY, {\n    // pass URL parameter\n    variables: { parlayId: parlayId },\n  });\n\n  const parlay = data?.parlay || {};\n\n  if (loading) {\n    return <div>Loading...💰...Create Your Next...💸...Winning Parlay Ticket...🎫</div>;\n  }\n  return (\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {parlay.username} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this ticket as of 🎫: {parlay.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px solid black',\n            lineHeight: '1.5',\n          }}\n        >\n          {parlay.parlay_name}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <OutcomeList outcomes={parlay.outcomes} />\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px solid black' }}>\n        <OutcomeForm parlayId={parlay._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleParlay;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ParlayList from '../components/ParlayList';\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nconst Dashboard = () => {\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n    \n  return (\n  <main>\n      <div className=\"flex-row justify-center\">\n      <div id=\"parlay-form\"\n            className=\"col-12 col-md-10 mb-3 p-3\"\n          >\n          </div>\n      <div className=\"flex-row justify-center\">\n        {loading ? (\n          <div>Loading...💸...</div>\n          ) : (\n        <ParlayList \n        parlays={parlays}\n        title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"\n        />\n        \n        )}\n        </div>\n        </div>\n  </main>\n     \n\n  );\n};\n\nexport default Dashboard;\n","import React, {useEffect} from \"react\";\nimport { Link } from 'react-router-dom';\nimport Aos from \"aos\";\n\nimport Auth from '../utils/auth';\n\nconst Navbar = () => {\n  useEffect(() => {\n\t\tAos.init({duration:2000});\n\t\twindow.addEventListener(\"scroll\", () => {\n\t\t});\n\t}, [])\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n      <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <h1 id=\"main-title\"> 🏈⚽<img id=\"parlay\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008558/cooltext422338805357325_qvpd09.png\" alt=\"Parlay Anytime\"></img>🏀⚾ </h1>\n        <Link className=\"text-light\" to=\"/\">\n            <h1 id=\"title\"><img id=\"build\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1666898132/cooltext422262976759629_qb9ewg.png\" alt=\"Build A Bet\"></img>🎲</h1>\n          </Link>\n          <div className=\"row\" id=\"links\">\n          {Auth.loggedIn() ? (\n            <>\n            <Link className=\"btn\" to=\"/me\">\n                {Auth.getProfile().data.username}'s Dashboard 🎛️\n            </Link>\n              <Link to=\"/parlays\">\n              <button className=\"btn\" to=\"/parlays\">\n              Parlays 🤑\n            </button>\n              </Link>\n            <button className=\"btn\" onClick={logout}>\n                Logout 📴\n            </button>\n            </>\n          ) : (\n            <>\n            <Link className=\"btn\" to=\"/\">\n                Games 🏟️\n            </Link>\n          \n            <Link className=\"btn\" to=\"/login\">\n                Login 📡\n            </Link>\n            \n            <Link className=\"btn\" to=\"/signup\">\n                Sign Up 🎰\n            </Link>\n            </>\n          )}\n          </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer id=\"footer\" className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button id=\"back\" className=\"btn\"\n            onClick={() => navigate(-1)}\n          >\n            ⬅️ Go Back \n          </button>\n        )}\n        <h4 id=\"foot-title\">\n          Made with{' '}\n            🎲\n          {' '}\n          <strong> Da Parlay Makers &copy; {year} </strong>\n            <div className=\"col-12 col-sm-12 col-md-8 mx-auto\">\n            <a\n\t\t\t\t\t\t\t\tclassName=\"px-3\"\n\t\t\t\t\t\t\t\thref=\"https://github.com/AASports89/build-a-bet\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t<img id=\"github\" src='https://res.cloudinary.com/dhqsixgmo/image/upload/v1666484175/public/images/github-icon_mvuylu.png' alt=\"github icon\"/>\n\t\t\t\t\t\t\t</a>\n            </div>\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleParlay from './pages/SingleParlay';\nimport Dashboard from './pages/Dashboard';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({}),\n});\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Navbar />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/parlays/:parlayId\" \n                element={<SingleParlay />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={ApolloClient}>\n    <App />\n    </ApolloProvider>x\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}