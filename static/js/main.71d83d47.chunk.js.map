{"version":3,"sources":["pages/signup.handlebars","pages/login.handlebars","pages/dashboard.handlebars","pages/layouts/main.handlebars","pages/post.handlebars","App.js","reportWebVitals.js","index.js","components/navbar.js"],"names":["Handlebars","require","App","_jsx","Router","children","_jsxs","className","Navbar","Routes","Route","path","element","Home","Login","Signup","PostForm","Dashboard","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","_objectSpread","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","React","StrictMode","ApolloProvider","document","getElementById","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","classList","toggle"],"mappings":"wNAAe,MAA0B,0CCA1B,MAA0B,yCCA1B,MAA0B,6C,iBCA1B,MAA0B,wCCA1B,MAA0B,wC,QCQnCA,EAAaC,EAAQ,IA0CZC,MAxCf,WACE,OACIC,cAACC,IAAM,CAAAC,SACLC,eAAA,OAAKC,UAAU,4CAA2CF,SAAA,CACxDF,cAACK,IAAM,IACPL,cAAA,OAAKI,UAAU,YAAWF,SACxBC,eAACG,IAAM,CAAAJ,SAAA,CACLF,cAACO,IAAK,CAACC,KAAK,IACVC,QAAST,cAACU,EAAI,MAEhBV,cAACO,IAAK,CAACC,KAAK,SACVC,QAAST,cAACW,EAAK,MAEjBX,cAACO,IAAK,CACJC,KAAK,UACLC,QAAST,cAACY,EAAM,MAEjBZ,cAACO,IAAK,CACLC,KAAK,QACLC,QAAST,cAACa,EAAQ,MAEpBb,cAACH,EAAU,CACTW,KAAK,aACLC,QAAST,cAACc,EAAS,MAErBd,cAACO,IAAK,CACJC,KAAK,MACLC,QAAST,cAACc,EAAS,MAErBd,cAACO,IAAK,CACJC,KAAK,sBACLC,QAAST,cAACc,EAAS,eAOnC,ECpCeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,ECIMS,EAAWC,YAAe,CAC9BC,IAAK,aAIDC,EAAWC,aAAW,SAACC,EAACX,GAAmB,IAAfY,EAAOZ,EAAPY,QAE1BC,EAAQC,aAAaC,QAAQ,YAEnC,MAAO,CACLH,QAAOI,wBAAA,GACFJ,GAAO,IACVK,cAAeJ,EAAK,UAAAK,OAAaL,GAAU,KAGjD,IAEMM,EAAS,IAAIC,IAAa,CAE9BC,KAAMZ,EAASS,OAAOZ,GACtBgB,MAAO,IAAIC,IAAc,CAAC,KAG5BC,IAASC,OACP5C,cAAC6C,IAAMC,WAAU,CAAA5C,SACfF,cAAC+C,IAAc,CAACT,OAAQA,EAAOpC,SAC/BF,cAACD,EAAG,QAGNiD,SAASC,eAAe,SAM1BlC,G,mBCjDAiC,SAASE,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAiBC,MAAMC,UAAUC,MAAMC,KACzCP,SAASQ,iBAAiB,kBAC1B,GAEAL,EAAeM,OAAS,GACxBN,EAAeO,SAAQ,SAACC,GACpBA,EAAGT,iBAAiB,SAAS,WACzB,IAAMU,EAASD,EAAGE,QAAQD,OACpBE,EAAUd,SAASC,eAAeW,GAExCD,EAAGI,UAAUC,OAAO,aACpBF,EAAQC,UAAUC,OAAO,YAC7B,GACJ,GAER,G","file":"static/js/main.71d83d47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/signup.42c5a7e8.handlebars\";","export default __webpack_public_path__ + \"static/media/login.b1147b0e.handlebars\";","export default __webpack_public_path__ + \"static/media/dashboard.15462f90.handlebars\";","export default __webpack_public_path__ + \"static/media/main.33055fa7.handlebars\";","export default __webpack_public_path__ + \"static/media/post.df7c5648.handlebars\";","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Signup from './pages/signup.handlebars';\nimport Login from './pages/login.handlebars';\nimport Dashboard from './pages/dashboard.handlebars';\nimport Navbar from './components/navbar';\nimport Home from './pages/layouts/main.handlebars';\nimport PostForm from './pages/post.handlebars';\nconst Handlebars = require('handlebars')\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Navbar />\n          <div className=\"container\">\n            <Routes>\n              <Route path='/'\n                element={<Home />}\n              />\n              <Route path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n               <Route \n                path='/post'\n                element={<PostForm />}\n              />\n              <Handlebars\n                path='/dashboard'\n                element={<Dashboard/>}\n                />\n              <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Dashboard />}\n              />\n            </Routes>\n          </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({}),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","document.addEventListener(\"DOMContentLoaded\", () => {\n    const $navbarBurgers = Array.prototype.slice.call(\n        document.querySelectorAll(\".navbar-burger\"),\n        0\n    );\n    if ($navbarBurgers.length > 0) {\n        $navbarBurgers.forEach((el) => {\n            el.addEventListener(\"click\", () => {\n                const target = el.dataset.target;\n                const $target = document.getElementById(target);\n\n                el.classList.toggle(\"is-active\");\n                $target.classList.toggle(\"is-active\");\n            });\n        });\n    }\n});"],"sourceRoot":""}